import{_ as r,C as o,c as p,o as d,aA as a,j as i,G as t,a as n,w as l}from"./chunks/framework.BeM8k1A1.js";const ds=JSON.parse('{"title":"Internal Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"lib/internals.md","filePath":"lib/internals.md","lastUpdated":null}'),h={name:"lib/internals.md"},k={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},X={class:"jldocstring custom-block",open:""},Y={class:"jldocstring custom-block",open:""},Z={class:"jldocstring custom-block",open:""},ss={class:"jldocstring custom-block",open:""},is={class:"jldocstring custom-block",open:""},es={class:"jldocstring custom-block",open:""};function ts(as,s,ns,ls,rs,os){const e=o("Badge");return d(),p("div",null,[s[180]||(s[180]=a('<h1 id="Internal-Documentation" tabindex="-1">Internal Documentation <a class="header-anchor" href="#Internal-Documentation" aria-label="Permalink to &quot;Internal Documentation {#Internal-Documentation}&quot;">​</a></h1><p>Documentation for <code>CensoredDistributions.jl</code>&#39;s internal interface.</p><h2 id="Contents" tabindex="-1">Contents <a class="header-anchor" href="#Contents" aria-label="Permalink to &quot;Contents {#Contents}&quot;">​</a></h2><ul><li><a href="./internals#Internal-Documentation">Internal Documentation</a><ul><li><a href="./internals#contents">Contents</a></li><li><a href="./internals#index">Index</a></li><li><a href="./internals#Internal-API">Internal API</a></li></ul></li></ul><h2 id="Index" tabindex="-1">Index <a class="header-anchor" href="#Index" aria-label="Permalink to &quot;Index {#Index}&quot;">​</a></h2><ul><li><a href="#Base.rand-Tuple{Random.AbstractRNG, ExponentiallyTilted}"><code>Base.rand</code></a></li><li><a href="#Base.rand-Tuple{Random.AbstractRNG, CensoredDistributions.Weighted}"><code>Base.rand</code></a></li><li><a href="#Base.rand-Tuple{Random.AbstractRNG, CensoredDistributions.IntervalCensored}"><code>Base.rand</code></a></li><li><a href="#Base.rand-Tuple{Random.AbstractRNG, CensoredDistributions.PrimaryCensored}"><code>Base.rand</code></a></li><li><a href="#CensoredDistributions._collect_unique_boundaries-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>CensoredDistributions._collect_unique_boundaries</code></a></li><li><a href="#CensoredDistributions._compute_pdfs_with_cache-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}, Dict}"><code>CensoredDistributions._compute_pdfs_with_cache</code></a></li><li><a href="#CensoredDistributions._gamma_cdf_ad_safe-Tuple{Real, Real, Real}"><code>CensoredDistributions._gamma_cdf_ad_safe</code></a></li><li><a href="#CensoredDistributions._make_weibull_g-Tuple{Real, Real}"><code>CensoredDistributions._make_weibull_g</code></a></li><li><a href="#CensoredDistributions._quantile_optimization-Tuple{Any, Real}"><code>CensoredDistributions._quantile_optimization</code></a></li><li><a href="#CensoredDistributions.combine_weights-Tuple{Missing, Missing}"><code>CensoredDistributions.combine_weights</code></a></li><li><a href="#Distributions.ccdf-Tuple{CensoredDistributions.Weighted, Real}"><code>Distributions.ccdf</code></a></li><li><a href="#Distributions.cdf-Tuple{CensoredDistributions.Weighted, Real}"><code>Distributions.cdf</code></a></li><li><a href="#Distributions.cdf-Tuple{ExponentiallyTilted, Real}"><code>Distributions.cdf</code></a></li><li><a href="#Distributions.cdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>Distributions.cdf</code></a></li><li><a href="#Distributions.cdf-Tuple{CensoredDistributions.PrimaryCensored, Real}"><code>Distributions.cdf</code></a></li><li><a href="#Distributions.logccdf-Tuple{CensoredDistributions.Weighted, Real}"><code>Distributions.logccdf</code></a></li><li><a href="#Distributions.logcdf-Tuple{CensoredDistributions.PrimaryCensored, Real}"><code>Distributions.logcdf</code></a></li><li><a href="#Distributions.logcdf-Tuple{ExponentiallyTilted, Real}"><code>Distributions.logcdf</code></a></li><li><a href="#Distributions.logcdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>Distributions.logcdf</code></a></li><li><a href="#Distributions.logcdf-Tuple{CensoredDistributions.Weighted, Real}"><code>Distributions.logcdf</code></a></li><li><a href="#Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>Distributions.logpdf</code></a></li><li><a href="#Distributions.logpdf-Tuple{ExponentiallyTilted, Real}"><code>Distributions.logpdf</code></a></li><li><a href="#Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>Distributions.logpdf</code></a></li><li><a href="#Distributions.logpdf-Tuple{Distributions.Product{&lt;:Distributions.ValueSupport, &lt;:CensoredDistributions.Weighted, &lt;:AbstractVector{&lt;:CensoredDistributions.Weighted}}, AbstractVector{&lt;:Real}}"><code>Distributions.logpdf</code></a></li><li><a href="#Distributions.logpdf-Tuple{CensoredDistributions.Weighted, NamedTuple{(:value, :weight)}}"><code>Distributions.logpdf</code></a></li><li><a href="#Distributions.logpdf-Tuple{CensoredDistributions.PrimaryCensored, Real}"><code>Distributions.logpdf</code></a></li><li><a href="#Distributions.logpdf-Tuple{CensoredDistributions.Weighted, Real}"><code>Distributions.logpdf</code></a></li><li><a href="#Distributions.logpdf-Tuple{Distributions.Product{&lt;:Distributions.ValueSupport, &lt;:CensoredDistributions.Weighted, &lt;:AbstractVector{&lt;:CensoredDistributions.Weighted}}, NamedTuple{(:values, :weights)}}"><code>Distributions.logpdf</code></a></li><li><a href="#Distributions.pdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>Distributions.pdf</code></a></li><li><a href="#Distributions.pdf-Tuple{CensoredDistributions.Weighted, Real}"><code>Distributions.pdf</code></a></li><li><a href="#Distributions.pdf-Tuple{CensoredDistributions.PrimaryCensored, Real}"><code>Distributions.pdf</code></a></li><li><a href="#Distributions.pdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>Distributions.pdf</code></a></li><li><a href="#Distributions.pdf-Tuple{ExponentiallyTilted, Real}"><code>Distributions.pdf</code></a></li><li><a href="#Distributions.sampler-Tuple{CensoredDistributions.Weighted}"><code>Distributions.sampler</code></a></li><li><a href="#Statistics.mean-Tuple{ExponentiallyTilted}"><code>Statistics.mean</code></a></li><li><a href="#Statistics.median-Tuple{ExponentiallyTilted}"><code>Statistics.median</code></a></li><li><a href="#Statistics.quantile-Tuple{CensoredDistributions.PrimaryCensored, Real}"><code>Statistics.quantile</code></a></li><li><a href="#Statistics.quantile-Tuple{ExponentiallyTilted, Real}"><code>Statistics.quantile</code></a></li><li><a href="#Statistics.quantile-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>Statistics.quantile</code></a></li><li><a href="#Statistics.quantile-Tuple{CensoredDistributions.Weighted, Real}"><code>Statistics.quantile</code></a></li><li><a href="#Statistics.std-Tuple{ExponentiallyTilted}"><code>Statistics.std</code></a></li><li><a href="#Statistics.var-Tuple{ExponentiallyTilted}"><code>Statistics.var</code></a></li><li><a href="#StatsAPI.loglikelihood-Tuple{Distributions.Product{&lt;:Distributions.ValueSupport, &lt;:CensoredDistributions.Weighted, &lt;:AbstractVector{&lt;:CensoredDistributions.Weighted}}, NamedTuple{(:values, :weights)}}"><code>StatsAPI.loglikelihood</code></a></li><li><a href="#StatsAPI.loglikelihood-Tuple{CensoredDistributions.Weighted, NamedTuple{(:values, :weights)}}"><code>StatsAPI.loglikelihood</code></a></li><li><a href="#StatsAPI.loglikelihood-Tuple{CensoredDistributions.Weighted, NamedTuple{(:value, :weight)}}"><code>StatsAPI.loglikelihood</code></a></li></ul><h2 id="Internal-API" tabindex="-1">Internal API <a class="header-anchor" href="#Internal-API" aria-label="Permalink to &quot;Internal API {#Internal-API}&quot;">​</a></h2>',7)),i("details",k,[i("summary",null,[s[0]||(s[0]=i("a",{id:"Base.rand-Tuple{Random.AbstractRNG, CensoredDistributions.IntervalCensored}",href:"#Base.rand-Tuple{Random.AbstractRNG, CensoredDistributions.IntervalCensored}"},[i("span",{class:"jlbinding"},"Base.rand")],-1)),s[1]||(s[1]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[3]||(s[3]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Random.AbstractRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.IntervalCensored</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Generate a random sample by discretising a sample from the underlying distribution.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Statistics.quantile-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>quantile</code></a></p>`,3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/IntervalCensored.jl#L448",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",u,[i("summary",null,[s[4]||(s[4]=i("a",{id:"Base.rand-Tuple{Random.AbstractRNG, CensoredDistributions.PrimaryCensored}",href:"#Base.rand-Tuple{Random.AbstractRNG, CensoredDistributions.PrimaryCensored}"},[i("span",{class:"jlbinding"},"Base.rand")],-1)),s[5]||(s[5]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[7]||(s[7]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Random.AbstractRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.PrimaryCensored</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Generate a random sample by summing samples from delay and primary event distributions.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Statistics.quantile-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>quantile</code></a></p>`,3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/PrimaryCensored.jl#L260",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",g,[i("summary",null,[s[8]||(s[8]=i("a",{id:"Base.rand-Tuple{Random.AbstractRNG, CensoredDistributions.Weighted}",href:"#Base.rand-Tuple{Random.AbstractRNG, CensoredDistributions.Weighted}"},[i("span",{class:"jlbinding"},"Base.rand")],-1)),s[9]||(s[9]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[11]||(s[11]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Random.AbstractRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.Weighted</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Generate a random sample (delegates to underlying distribution).</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Statistics.quantile-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>quantile</code></a></p>`,3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[10]||(s[10]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L415",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",c,[i("summary",null,[s[12]||(s[12]=i("a",{id:"Base.rand-Tuple{Random.AbstractRNG, ExponentiallyTilted}",href:"#Base.rand-Tuple{Random.AbstractRNG, ExponentiallyTilted}"},[i("span",{class:"jlbinding"},"Base.rand")],-1)),s[13]||(s[13]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[15]||(s[15]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Random.AbstractRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ExponentiallyTilted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Generate a random sample using inverse transform sampling.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Statistics.quantile-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>quantile</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[14]||(s[14]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/distributions/ExponentiallyTilted.jl#L217",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",b,[i("summary",null,[s[16]||(s[16]=i("a",{id:"CensoredDistributions._collect_unique_boundaries-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{<:Real}}",href:"#CensoredDistributions._collect_unique_boundaries-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{<:Real}}"},[i("span",{class:"jlbinding"},"CensoredDistributions._collect_unique_boundaries")],-1)),s[17]||(s[17]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[19]||(s[19]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_collect_unique_boundaries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.IntervalCensored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:Real}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>_collect_unique_boundaries(d::IntervalCensored, x::AbstractVector)</span></span></code></pre></div><p>Collect all unique interval boundaries needed for vectorised PDF computation.</p><p>Returns a sorted vector of unique boundaries with appropriate type promotion.</p>`,4)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[18]||(s[18]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/IntervalCensored.jl#L242",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",E,[i("summary",null,[s[20]||(s[20]=i("a",{id:"CensoredDistributions._compute_pdfs_with_cache-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{<:Real}, Dict}",href:"#CensoredDistributions._compute_pdfs_with_cache-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{<:Real}, Dict}"},[i("span",{class:"jlbinding"},"CensoredDistributions._compute_pdfs_with_cache")],-1)),s[21]||(s[21]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[23]||(s[23]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_compute_pdfs_with_cache</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.IntervalCensored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cdf_lookup</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>_compute_pdfs_with_cache(d::IntervalCensored, x::AbstractVector, cdf_lookup::Dict)</span></span></code></pre></div><p>Compute PDFs efficiently using cached CDF values.</p><p>Uses the same boundary case handling as the scalar method.</p>`,4)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[22]||(s[22]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/IntervalCensored.jl#L283",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",y,[i("summary",null,[s[24]||(s[24]=i("a",{id:"CensoredDistributions._gamma_cdf_ad_safe-Tuple{Real, Real, Real}",href:"#CensoredDistributions._gamma_cdf_ad_safe-Tuple{Real, Real, Real}"},[i("span",{class:"jlbinding"},"CensoredDistributions._gamma_cdf_ad_safe")],-1)),s[25]||(s[25]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[27]||(s[27]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_gamma_cdf_ad_safe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>AD-compatible gamma CDF using HypergeometricFunctions.</p><p>Based on the identity: γ(a,z) = z^a/a * M(a, a+1, -z) where γ is the lower incomplete gamma function and M is the confluent hypergeometric function.</p><p>Uses the same approach as the Weibull g function: P(a,z) = γ(a,z)/Γ(a) = z^a/a * M(a, a+1, -z) / Γ(a). For integer a, Γ(a) = (a-1)!, but uses gamma(k) for generality.</p><p><strong>Arguments</strong></p><ul><li><p><code>k::Real</code>: Shape parameter</p></li><li><p><code>θ::Real</code>: Scale parameter</p></li><li><p><code>x::Real</code>: Evaluation point</p></li></ul><p><strong>Returns</strong></p><p>The gamma CDF value at x with shape k and scale θ.</p>',8)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[26]||(s[26]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/primarycensored_cdf.jl#L1",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",C,[i("summary",null,[s[28]||(s[28]=i("a",{id:"CensoredDistributions._make_weibull_g-Tuple{Real, Real}",href:"#CensoredDistributions._make_weibull_g-Tuple{Real, Real}"},[i("span",{class:"jlbinding"},"CensoredDistributions._make_weibull_g")],-1)),s[29]||(s[29]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[31]||(s[31]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_make_weibull_g</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    λ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CensoredDistributions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var&quot;#weibull_g_specialized#1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Function factory for optimized Weibull g function.</p><p>Creates a specialized function with pre-computed constants for g(t; k, λ) = γ(1 + 1/k, (t/λ)^k) where γ is the lower incomplete gamma function.</p><p>Pre-computes <code>inv_k = 1/k</code> and <code>a = 1 + inv_k</code> to avoid repeated computation in the returned specialized function.</p><p><strong>Arguments</strong></p><ul><li><p><code>k::Real</code>: Weibull shape parameter</p></li><li><p><code>λ::Real</code>: Weibull scale parameter</p></li></ul><p><strong>Returns</strong></p><p>A specialized function <code>weibull_g_specialized(t::Real)</code> that efficiently computes the Weibull g function using pre-computed constants.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">weibull_g_func </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> _make_weibull_g</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g_val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> weibull_g_func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,10)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[30]||(s[30]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/primarycensored_cdf.jl#L27",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",f,[i("summary",null,[s[32]||(s[32]=i("a",{id:"CensoredDistributions._quantile_optimization-Tuple{Any, Real}",href:"#CensoredDistributions._quantile_optimization-Tuple{Any, Real}"},[i("span",{class:"jlbinding"},"CensoredDistributions._quantile_optimization")],-1)),s[33]||(s[33]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[35]||(s[35]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_quantile_optimization</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    initial_guess_fn,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    result_postprocess_fn,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    check_nan</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Internal function for quantile optimization using numerical methods.</p><p>Solves the equation <code>cdf(d, q) - p = 0</code> using the Nelder-Mead algorithm. This is shared logic used by both <code>PrimaryCensored</code> and <code>IntervalCensored</code> quantile functions.</p><p><strong>Arguments</strong></p><ul><li><p><code>d</code>: The distribution for which to compute the quantile</p></li><li><p><code>p</code>: The probability value in <code>[0, 1]</code></p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>initial_guess_fn</code>: Function that takes <code>(d, p)</code> and returns initial guess vector. If <code>nothing</code>, uses <code>quantile(get_dist(d), p)</code> as scalar initial guess.</p></li><li><p><code>result_postprocess_fn</code>: Function to post-process the optimization result. Defaults to identity (no post-processing).</p></li><li><p><code>check_nan</code>: If <code>true</code>, explicitly check for NaN input values.</p></li></ul><p><strong>Returns</strong></p><p>The quantile value after optimization and post-processing.</p><p><strong>Implementation Details</strong></p><ul><li><p>Validates that p ∈ <code>[0, 1]</code> (with optional NaN checking)</p></li><li><p>Handles boundary cases p=0 (minimum) and p=1 (maximum) analytically</p></li><li><p>Creates objective function <code>(cdf(d, q) - p)^2</code> with support checking</p></li><li><p>Uses heavy penalty for values outside distribution support</p></li><li><p>Solves with Nelder-Mead algorithm with tight tolerances</p></li><li><p>Checks convergence and applies post-processing to result</p></li></ul><p><strong>Type Stability</strong></p><p>This function is designed to maintain type stability when the initial guess function and post-processing function are type-stable.</p>`,13)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[34]||(s[34]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/quantile_optimization.jl#L8",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",D,[i("summary",null,[s[36]||(s[36]=i("a",{id:"CensoredDistributions.combine_weights-Tuple{Missing, Missing}",href:"#CensoredDistributions.combine_weights-Tuple{Missing, Missing}"},[i("span",{class:"jlbinding"},"CensoredDistributions.combine_weights")],-1)),s[37]||(s[37]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[39]||(s[39]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">combine_weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, _</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Missing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Missing</span></span></code></pre></div><p>Combine constructor weight with observation weight using dispatch-based rules.</p><p>Weight combination rules:</p><ul><li><p><code>missing, missing → missing</code> (both missing means no weight)</p></li><li><p><code>w1, missing → w1</code> (use constructor weight)</p></li><li><p><code>missing, w2 → w2</code> (use observation weight)</p></li><li><p><code>w1, w2 → w1 * w2</code> (multiply weights)</p></li></ul><p><strong>Vector Extensions</strong></p><p>For Product distributions, additional methods handle vectorised weight combinations:</p><ul><li><p><code>Vector, Vector → combine_weights.(vector1, vector2)</code> (element-wise combination)</p></li><li><p><code>Vector, missing → Vector</code> (keep constructor weights)</p></li><li><p><code>Vector, scalar → [combine_weights(w, scalar) for w in Vector]</code> (broadcast scalar)</p></li></ul>',7)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[38]||(s[38]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L435",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",T,[i("summary",null,[s[40]||(s[40]=i("a",{id:"Distributions.ccdf-Tuple{CensoredDistributions.Weighted, Real}",href:"#Distributions.ccdf-Tuple{CensoredDistributions.Weighted, Real}"},[i("span",{class:"jlbinding"},"Distributions.ccdf")],-1)),s[41]||(s[41]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[43]||(s[43]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ccdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.Weighted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the complementary cumulative distribution function (delegates to underlying distribution).</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.cdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>cdf</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[42]||(s[42]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L383",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",m,[i("summary",null,[s[44]||(s[44]=i("a",{id:"Distributions.cdf-Tuple{CensoredDistributions.IntervalCensored, Real}",href:"#Distributions.cdf-Tuple{CensoredDistributions.IntervalCensored, Real}"},[i("span",{class:"jlbinding"},"Distributions.cdf")],-1)),s[45]||(s[45]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[47]||(s[47]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.IntervalCensored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the cumulative distribution function.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logcdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>logcdf</code></a></p>`,3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[46]||(s[46]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/IntervalCensored.jl#L408",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",_,[i("summary",null,[s[48]||(s[48]=i("a",{id:"Distributions.cdf-Tuple{CensoredDistributions.PrimaryCensored, Real}",href:"#Distributions.cdf-Tuple{CensoredDistributions.PrimaryCensored, Real}"},[i("span",{class:"jlbinding"},"Distributions.cdf")],-1)),s[49]||(s[49]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[51]||(s[51]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.PrimaryCensored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the cumulative distribution function.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logcdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>logcdf</code></a></p>`,3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[50]||(s[50]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/PrimaryCensored.jl#L142",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",v,[i("summary",null,[s[52]||(s[52]=i("a",{id:"Distributions.cdf-Tuple{CensoredDistributions.Weighted, Real}",href:"#Distributions.cdf-Tuple{CensoredDistributions.Weighted, Real}"},[i("span",{class:"jlbinding"},"Distributions.cdf")],-1)),s[53]||(s[53]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[55]||(s[55]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.Weighted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the cumulative distribution function (delegates to underlying distribution).</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logcdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>logcdf</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[54]||(s[54]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L361",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",j,[i("summary",null,[s[56]||(s[56]=i("a",{id:"Distributions.cdf-Tuple{ExponentiallyTilted, Real}",href:"#Distributions.cdf-Tuple{ExponentiallyTilted, Real}"},[i("span",{class:"jlbinding"},"Distributions.cdf")],-1)),s[57]||(s[57]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[59]||(s[59]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ExponentiallyTilted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the cumulative distribution function.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logcdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>logcdf</code></a>, <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Statistics.quantile-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>quantile</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[58]||(s[58]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/distributions/ExponentiallyTilted.jl#L133",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",A,[i("summary",null,[s[60]||(s[60]=i("a",{id:"Distributions.logccdf-Tuple{CensoredDistributions.Weighted, Real}",href:"#Distributions.logccdf-Tuple{CensoredDistributions.Weighted, Real}"},[i("span",{class:"jlbinding"},"Distributions.logccdf")],-1)),s[61]||(s[61]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[63]||(s[63]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logccdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.Weighted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the log complementary cumulative distribution function (delegates to underlying distribution).</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logcdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>logcdf</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[62]||(s[62]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L394",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",F,[i("summary",null,[s[64]||(s[64]=i("a",{id:"Distributions.logcdf-Tuple{CensoredDistributions.IntervalCensored, Real}",href:"#Distributions.logcdf-Tuple{CensoredDistributions.IntervalCensored, Real}"},[i("span",{class:"jlbinding"},"Distributions.logcdf")],-1)),s[65]||(s[65]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[67]||(s[67]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logcdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.IntervalCensored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the log cumulative distribution function.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.cdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>cdf</code></a></p>`,3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[66]||(s[66]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/IntervalCensored.jl#L418",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",R,[i("summary",null,[s[68]||(s[68]=i("a",{id:"Distributions.logcdf-Tuple{CensoredDistributions.PrimaryCensored, Real}",href:"#Distributions.logcdf-Tuple{CensoredDistributions.PrimaryCensored, Real}"},[i("span",{class:"jlbinding"},"Distributions.logcdf")],-1)),s[69]||(s[69]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[71]||(s[71]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logcdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.PrimaryCensored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the log cumulative distribution function.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.cdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>cdf</code></a></p>`,3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[70]||(s[70]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/PrimaryCensored.jl#L152",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",S,[i("summary",null,[s[72]||(s[72]=i("a",{id:"Distributions.logcdf-Tuple{CensoredDistributions.Weighted, Real}",href:"#Distributions.logcdf-Tuple{CensoredDistributions.Weighted, Real}"},[i("span",{class:"jlbinding"},"Distributions.logcdf")],-1)),s[73]||(s[73]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[75]||(s[75]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logcdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.Weighted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the log cumulative distribution function (delegates to underlying distribution).</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.cdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>cdf</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[74]||(s[74]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L372",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",x,[i("summary",null,[s[76]||(s[76]=i("a",{id:"Distributions.logcdf-Tuple{ExponentiallyTilted, Real}",href:"#Distributions.logcdf-Tuple{ExponentiallyTilted, Real}"},[i("span",{class:"jlbinding"},"Distributions.logcdf")],-1)),s[77]||(s[77]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[79]||(s[79]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logcdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ExponentiallyTilted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the log cumulative distribution function.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.cdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>cdf</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[78]||(s[78]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/distributions/ExponentiallyTilted.jl#L162",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",I,[i("summary",null,[s[80]||(s[80]=i("a",{id:"Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{<:Real}}",href:"#Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{<:Real}}"},[i("span",{class:"jlbinding"},"Distributions.logpdf")],-1)),s[81]||(s[81]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[83]||(s[83]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logpdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.IntervalCensored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:Real}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute log probability masses for an array of values using optimised PDF computation.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.pdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>pdf</code></a>, <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>logpdf</code></a></p>`,3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[82]||(s[82]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/IntervalCensored.jl#L341",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",P,[i("summary",null,[s[84]||(s[84]=i("a",{id:"Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, Real}",href:"#Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, Real}"},[i("span",{class:"jlbinding"},"Distributions.logpdf")],-1)),s[85]||(s[85]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[87]||(s[87]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logpdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.IntervalCensored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the log probability mass for the interval containing <code>x</code>.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.pdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>pdf</code></a>, <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logcdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>logcdf</code></a></p>`,3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[86]||(s[86]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/IntervalCensored.jl#L213",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",w,[i("summary",null,[s[88]||(s[88]=i("a",{id:"Distributions.logpdf-Tuple{CensoredDistributions.PrimaryCensored, Real}",href:"#Distributions.logpdf-Tuple{CensoredDistributions.PrimaryCensored, Real}"},[i("span",{class:"jlbinding"},"Distributions.logpdf")],-1)),s[89]||(s[89]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[91]||(s[91]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logpdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.PrimaryCensored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the log probability density function using numerical differentiation of the log CDF.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.pdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>pdf</code></a>, <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logcdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>logcdf</code></a></p>`,3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[90]||(s[90]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/PrimaryCensored.jl#L192",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",V,[i("summary",null,[s[92]||(s[92]=i("a",{id:"Distributions.logpdf-Tuple{CensoredDistributions.Weighted, NamedTuple{:value, :weight}}",href:"#Distributions.logpdf-Tuple{CensoredDistributions.Weighted, NamedTuple{:value, :weight}}"},[i("span",{class:"jlbinding"},"Distributions.logpdf")],-1)),s[93]||(s[93]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[95]||(s[95]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logpdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.Weighted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple{(:value, :weight)}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Return the weighted log-probability for joint observations as NamedTuple.</p><p>Combines constructor weight with observation weight via multiplication. Expected format: <code>(value = x, weight = w)</code>.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.pdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>pdf</code></a></p>`,4)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[94]||(s[94]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L245",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",B,[i("summary",null,[s[96]||(s[96]=i("a",{id:"Distributions.logpdf-Tuple{CensoredDistributions.Weighted, Real}",href:"#Distributions.logpdf-Tuple{CensoredDistributions.Weighted, Real}"},[i("span",{class:"jlbinding"},"Distributions.logpdf")],-1)),s[97]||(s[97]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[99]||(s[99]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logpdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.Weighted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Return the weighted log-probability for scalar observations.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.pdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>pdf</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[98]||(s[98]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L235",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",M,[i("summary",null,[s[100]||(s[100]=i("a",{id:"Distributions.logpdf-Tuple{Distributions.Product{<:Distributions.ValueSupport, <:CensoredDistributions.Weighted, <:AbstractVector{<:CensoredDistributions.Weighted}}, AbstractVector{<:Real}}",href:"#Distributions.logpdf-Tuple{Distributions.Product{<:Distributions.ValueSupport, <:CensoredDistributions.Weighted, <:AbstractVector{<:CensoredDistributions.Weighted}}, AbstractVector{<:Real}}"},[i("span",{class:"jlbinding"},"Distributions.logpdf")],-1)),s[101]||(s[101]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[103]||(s[103]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logpdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Distributions.Product{&lt;:Distributions.ValueSupport, &lt;:CensoredDistributions.Weighted, &lt;:AbstractVector{&lt;:CensoredDistributions.Weighted}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:Real}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Efficient vectorised log-probability computation for Product{&lt;:ValueSupport, &lt;:Weighted} with vector observations.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>logpdf</code></a></p>`,3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[102]||(s[102]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L296",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",W,[i("summary",null,[s[104]||(s[104]=i("a",{id:"Distributions.logpdf-Tuple{Distributions.Product{<:Distributions.ValueSupport, <:CensoredDistributions.Weighted, <:AbstractVector{<:CensoredDistributions.Weighted}}, NamedTuple{:values, :weights}}",href:"#Distributions.logpdf-Tuple{Distributions.Product{<:Distributions.ValueSupport, <:CensoredDistributions.Weighted, <:AbstractVector{<:CensoredDistributions.Weighted}}, NamedTuple{:values, :weights}}"},[i("span",{class:"jlbinding"},"Distributions.logpdf")],-1)),s[105]||(s[105]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[107]||(s[107]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logpdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Distributions.Product{&lt;:Distributions.ValueSupport, &lt;:CensoredDistributions.Weighted, &lt;:AbstractVector{&lt;:CensoredDistributions.Weighted}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple{(:values, :weights)}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Efficient vectorised log-probability computation for Product{&lt;:ValueSupport, &lt;:Weighted} with joint observations.</p><p>Handles joint observations and weight stacking. Expected format: <code>(values = [...], weights = [...])</code>.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>logpdf</code></a></p>`,4)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[106]||(s[106]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L280",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",N,[i("summary",null,[s[108]||(s[108]=i("a",{id:"Distributions.logpdf-Tuple{ExponentiallyTilted, Real}",href:"#Distributions.logpdf-Tuple{ExponentiallyTilted, Real}"},[i("span",{class:"jlbinding"},"Distributions.logpdf")],-1)),s[109]||(s[109]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[111]||(s[111]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logpdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ExponentiallyTilted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the log probability density function.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.pdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>pdf</code></a>, <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.cdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>cdf</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[110]||(s[110]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/distributions/ExponentiallyTilted.jl#L112",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",q,[i("summary",null,[s[112]||(s[112]=i("a",{id:"Distributions.pdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{<:Real}}",href:"#Distributions.pdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{<:Real}}"},[i("span",{class:"jlbinding"},"Distributions.pdf")],-1)),s[113]||(s[113]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[115]||(s[115]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.IntervalCensored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:Real}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute probability masses for an array of values using optimised vectorisation.</p><p>This method collects unique interval boundaries, computes CDFs once, then uses cached values for efficient PDF computation across the array.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.pdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>pdf</code></a>, <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>logpdf</code></a></p>`,4)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[114]||(s[114]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/IntervalCensored.jl#L315",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",O,[i("summary",null,[s[116]||(s[116]=i("a",{id:"Distributions.pdf-Tuple{CensoredDistributions.IntervalCensored, Real}",href:"#Distributions.pdf-Tuple{CensoredDistributions.IntervalCensored, Real}"},[i("span",{class:"jlbinding"},"Distributions.pdf")],-1)),s[117]||(s[117]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[119]||(s[119]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.IntervalCensored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the probability mass for the interval containing <code>x</code>.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>logpdf</code></a>, <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.cdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>cdf</code></a></p>`,3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[118]||(s[118]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/IntervalCensored.jl#L188",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",L,[i("summary",null,[s[120]||(s[120]=i("a",{id:"Distributions.pdf-Tuple{CensoredDistributions.PrimaryCensored, Real}",href:"#Distributions.pdf-Tuple{CensoredDistributions.PrimaryCensored, Real}"},[i("span",{class:"jlbinding"},"Distributions.pdf")],-1)),s[121]||(s[121]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[123]||(s[123]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.PrimaryCensored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the probability density function using numerical differentiation.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>logpdf</code></a></p>`,3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[122]||(s[122]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/PrimaryCensored.jl#L182",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",z,[i("summary",null,[s[124]||(s[124]=i("a",{id:"Distributions.pdf-Tuple{CensoredDistributions.Weighted, Real}",href:"#Distributions.pdf-Tuple{CensoredDistributions.Weighted, Real}"},[i("span",{class:"jlbinding"},"Distributions.pdf")],-1)),s[125]||(s[125]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[127]||(s[127]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.Weighted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Return the probability density from the underlying distribution (unweighted).</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>logpdf</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[126]||(s[126]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L216",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",G,[i("summary",null,[s[128]||(s[128]=i("a",{id:"Distributions.pdf-Tuple{ExponentiallyTilted, Real}",href:"#Distributions.pdf-Tuple{ExponentiallyTilted, Real}"},[i("span",{class:"jlbinding"},"Distributions.pdf")],-1)),s[129]||(s[129]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[131]||(s[131]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ExponentiallyTilted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the probability density function.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>logpdf</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[130]||(s[130]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/distributions/ExponentiallyTilted.jl#L102",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",U,[i("summary",null,[s[132]||(s[132]=i("a",{id:"Distributions.sampler-Tuple{CensoredDistributions.Weighted}",href:"#Distributions.sampler-Tuple{CensoredDistributions.Weighted}"},[i("span",{class:"jlbinding"},"Distributions.sampler")],-1)),s[133]||(s[133]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[135]||(s[135]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sampler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.Weighted</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Union{CensoredDistributions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Weighted{D, Missing} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(Distributions.UnivariateDistribution)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, CensoredDistributions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Weighted{D, T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(Distributions.UnivariateDistribution)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}}</span></span></code></pre></div><p>Create a sampler for efficient sampling (delegates to underlying distribution).</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Base.rand-Tuple{Random.AbstractRNG, CensoredDistributions.IntervalCensored}"><code>rand</code></a></p>`,3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[134]||(s[134]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L423",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",H,[i("summary",null,[s[136]||(s[136]=i("a",{id:"Statistics.mean-Tuple{ExponentiallyTilted}",href:"#Statistics.mean-Tuple{ExponentiallyTilted}"},[i("span",{class:"jlbinding"},"Statistics.mean")],-1)),s[137]||(s[137]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[139]||(s[139]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ExponentiallyTilted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the mean of the distribution.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Statistics.var-Tuple{ExponentiallyTilted}"><code>var</code></a>, <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Statistics.std-Tuple{ExponentiallyTilted}"><code>std</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[138]||(s[138]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/distributions/ExponentiallyTilted.jl#L230",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",$,[i("summary",null,[s[140]||(s[140]=i("a",{id:"Statistics.median-Tuple{ExponentiallyTilted}",href:"#Statistics.median-Tuple{ExponentiallyTilted}"},[i("span",{class:"jlbinding"},"Statistics.median")],-1)),s[141]||(s[141]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[143]||(s[143]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">median</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ExponentiallyTilted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the median of the distribution.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Statistics.quantile-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>quantile</code></a>, <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Statistics.mean-Tuple{ExponentiallyTilted}"><code>mean</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[142]||(s[142]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/distributions/ExponentiallyTilted.jl#L291",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",J,[i("summary",null,[s[144]||(s[144]=i("a",{id:"Statistics.quantile-Tuple{CensoredDistributions.IntervalCensored, Real}",href:"#Statistics.quantile-Tuple{CensoredDistributions.IntervalCensored, Real}"},[i("span",{class:"jlbinding"},"Statistics.quantile")],-1)),s[145]||(s[145]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[147]||(s[147]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">quantile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.IntervalCensored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the quantile using numerical optimization.</p><p>The returned quantile respects the interval structure:</p><ul><li><p>For regular intervals: quantiles are multiples of the interval width</p></li><li><p>For arbitrary intervals: quantiles correspond to interval boundary values</p></li></ul><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.cdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>cdf</code></a></p>`,5)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[146]||(s[146]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/IntervalCensored.jl#L478",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",K,[i("summary",null,[s[148]||(s[148]=i("a",{id:"Statistics.quantile-Tuple{CensoredDistributions.PrimaryCensored, Real}",href:"#Statistics.quantile-Tuple{CensoredDistributions.PrimaryCensored, Real}"},[i("span",{class:"jlbinding"},"Statistics.quantile")],-1)),s[149]||(s[149]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[151]||(s[151]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">quantile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.PrimaryCensored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the quantile (inverse CDF) using numerical optimization.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.cdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>cdf</code></a></p>`,3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[150]||(s[150]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/censoring/PrimaryCensored.jl#L241",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",Q,[i("summary",null,[s[152]||(s[152]=i("a",{id:"Statistics.quantile-Tuple{CensoredDistributions.Weighted, Real}",href:"#Statistics.quantile-Tuple{CensoredDistributions.Weighted, Real}"},[i("span",{class:"jlbinding"},"Statistics.quantile")],-1)),s[153]||(s[153]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[155]||(s[155]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">quantile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.Weighted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the quantile function (delegates to underlying distribution).</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.cdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>cdf</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[154]||(s[154]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L405",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",X,[i("summary",null,[s[156]||(s[156]=i("a",{id:"Statistics.quantile-Tuple{ExponentiallyTilted, Real}",href:"#Statistics.quantile-Tuple{ExponentiallyTilted, Real}"},[i("span",{class:"jlbinding"},"Statistics.quantile")],-1)),s[157]||(s[157]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[159]||(s[159]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">quantile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ExponentiallyTilted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the quantile function (inverse CDF) using analytical formula.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.cdf-Tuple{CensoredDistributions.IntervalCensored, Real}"><code>cdf</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[158]||(s[158]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/distributions/ExponentiallyTilted.jl#L183",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",Y,[i("summary",null,[s[160]||(s[160]=i("a",{id:"Statistics.std-Tuple{ExponentiallyTilted}",href:"#Statistics.std-Tuple{ExponentiallyTilted}"},[i("span",{class:"jlbinding"},"Statistics.std")],-1)),s[161]||(s[161]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[163]||(s[163]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ExponentiallyTilted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the standard deviation of the distribution.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Statistics.mean-Tuple{ExponentiallyTilted}"><code>mean</code></a>, <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Statistics.var-Tuple{ExponentiallyTilted}"><code>var</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[162]||(s[162]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/distributions/ExponentiallyTilted.jl#L280",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",Z,[i("summary",null,[s[164]||(s[164]=i("a",{id:"Statistics.var-Tuple{ExponentiallyTilted}",href:"#Statistics.var-Tuple{ExponentiallyTilted}"},[i("span",{class:"jlbinding"},"Statistics.var")],-1)),s[165]||(s[165]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[167]||(s[167]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ExponentiallyTilted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute the variance of the distribution.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Statistics.mean-Tuple{ExponentiallyTilted}"><code>mean</code></a>, <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Statistics.std-Tuple{ExponentiallyTilted}"><code>std</code></a></p>',3)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[166]||(s[166]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/distributions/ExponentiallyTilted.jl#L249",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",ss,[i("summary",null,[s[168]||(s[168]=i("a",{id:"StatsAPI.loglikelihood-Tuple{CensoredDistributions.Weighted, NamedTuple{:value, :weight}}",href:"#StatsAPI.loglikelihood-Tuple{CensoredDistributions.Weighted, NamedTuple{:value, :weight}}"},[i("span",{class:"jlbinding"},"StatsAPI.loglikelihood")],-1)),s[169]||(s[169]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[171]||(s[171]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">loglikelihood</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.Weighted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple{(:value, :weight)}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute log-likelihood for single Weighted distribution with joint observations.</p><p>Handles joint observations as NamedTuple: <code>(value = x, weight = w)</code>.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>logpdf</code></a></p>`,4)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[170]||(s[170]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L313",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",is,[i("summary",null,[s[172]||(s[172]=i("a",{id:"StatsAPI.loglikelihood-Tuple{CensoredDistributions.Weighted, NamedTuple{:values, :weights}}",href:"#StatsAPI.loglikelihood-Tuple{CensoredDistributions.Weighted, NamedTuple{:values, :weights}}"},[i("span",{class:"jlbinding"},"StatsAPI.loglikelihood")],-1)),s[173]||(s[173]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[175]||(s[175]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">loglikelihood</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CensoredDistributions.Weighted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple{(:values, :weights)}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute log-likelihood for single Weighted distribution with vectorized joint observations.</p><p>Handles joint observations as NamedTuple: <code>(values = [...], weights = [...])</code>. This is useful when a single weighted distribution is used with multiple observations.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>logpdf</code></a></p>`,4)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[174]||(s[174]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L325",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",es,[i("summary",null,[s[176]||(s[176]=i("a",{id:"StatsAPI.loglikelihood-Tuple{Distributions.Product{<:Distributions.ValueSupport, <:CensoredDistributions.Weighted, <:AbstractVector{<:CensoredDistributions.Weighted}}, NamedTuple{:values, :weights}}",href:"#StatsAPI.loglikelihood-Tuple{Distributions.Product{<:Distributions.ValueSupport, <:CensoredDistributions.Weighted, <:AbstractVector{<:CensoredDistributions.Weighted}}, NamedTuple{:values, :weights}}"},[i("span",{class:"jlbinding"},"StatsAPI.loglikelihood")],-1)),s[177]||(s[177]=n()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[179]||(s[179]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">loglikelihood</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Distributions.Product{&lt;:Distributions.ValueSupport, &lt;:CensoredDistributions.Weighted, &lt;:AbstractVector{&lt;:CensoredDistributions.Weighted}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple{(:values, :weights)}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Any</span></span></code></pre></div><p>Compute log-likelihood for Product{&lt;:ValueSupport, &lt;:Weighted} with joint observations.</p><p>Handles joint observations as NamedTuple: <code>(values = [...], weights = [...])</code>.</p><p>See also: <a href="/CensoredDistributions.jl/previews/PR137/lib/internals#Distributions.logpdf-Tuple{CensoredDistributions.IntervalCensored, AbstractVector{&lt;:Real}}"><code>logpdf</code></a></p>`,4)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[178]||(s[178]=[i("a",{href:"https://github.com/EpiAware/CensoredDistributions.jl/blob/6a0612d869ca4f8b059e2f4851979882fca60574/src/utils/Weighted.jl#L342",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const hs=r(h,[["render",ts]]);export{ds as __pageData,hs as default};
