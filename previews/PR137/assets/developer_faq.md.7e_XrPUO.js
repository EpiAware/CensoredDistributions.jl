import{_ as i,c as a,o as e,aA as t}from"./chunks/framework.BeM8k1A1.js";const c=JSON.parse('{"title":"Developer FAQ","description":"","frontmatter":{},"headers":[],"relativePath":"developer/faq.md","filePath":"developer/faq.md","lastUpdated":null}'),n={name:"developer/faq.md"};function l(o,s,h,p,r,d){return e(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="developer-faq" tabindex="-1">Developer FAQ <a class="header-anchor" href="#developer-faq" aria-label="Permalink to &quot;Developer FAQ {#developer-faq}&quot;">​</a></h1><p>This page contains frequently asked questions for developers and contributors to CensoredDistributions.jl.</p><h2 id="Development-Environment" tabindex="-1">Development Environment <a class="header-anchor" href="#Development-Environment" aria-label="Permalink to &quot;Development Environment {#Development-Environment}&quot;">​</a></h2><h3 id="Q:-My-code-changes-aren&#39;t-reflecting-when-developing" tabindex="-1">Q: My code changes aren&#39;t reflecting when developing <a class="header-anchor" href="#Q:-My-code-changes-aren&#39;t-reflecting-when-developing" aria-label="Permalink to &quot;Q: My code changes aren&amp;#39;t reflecting when developing {#Q:-My-code-changes-aren&#39;t-reflecting-when-developing}&quot;">​</a></h3><p><strong>A:</strong> Install and use Revise.jl for automatic code reloading:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pkg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Pkg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Revise&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install once</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Revise               </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Load before your package</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CensoredDistributions </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Now changes reload automatically</span></span></code></pre></div><p>Better yet, add Revise to your <code>startup.jl</code> file as described in the <a href="/CensoredDistributions.jl/previews/PR137/getting-started/julia#julia">Julia setup guide</a>.</p><h3 id="Q:-I-get-&quot;Package-not-found&quot;-errors-during-development" tabindex="-1">Q: I get &quot;Package not found&quot; errors during development <a class="header-anchor" href="#Q:-I-get-&quot;Package-not-found&quot;-errors-during-development" aria-label="Permalink to &quot;Q: I get &amp;quot;Package not found&amp;quot; errors during development {#Q:-I-get-&quot;Package-not-found&quot;-errors-during-development}&quot;">​</a></h3><p><strong>A:</strong> Make sure you&#39;re in the right environment:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pkg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Pkg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">activate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Activate current directory</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Pkg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">instantiate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Pkg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">develop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PackageSpec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Add local package in dev mode</span></span></code></pre></div><h2 id="Testing" tabindex="-1">Testing <a class="header-anchor" href="#Testing" aria-label="Permalink to &quot;Testing {#Testing}&quot;">​</a></h2><h3 id="Q:-Tests-are-failing-or-taking-too-long" tabindex="-1">Q: Tests are failing or taking too long <a class="header-anchor" href="#Q:-Tests-are-failing-or-taking-too-long" aria-label="Permalink to &quot;Q: Tests are failing or taking too long {#Q:-Tests-are-failing-or-taking-too-long}&quot;">​</a></h3><p><strong>A:</strong> For development, you can skip quality tests:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">julia</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project=test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test/runtests.jl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> skip_quality</span></span></code></pre></div><p>This runs core functionality tests without slow formatting/linting checks.</p><h3 id="Q:-How-do-I-run-specific-tests?" tabindex="-1">Q: How do I run specific tests? <a class="header-anchor" href="#Q:-How-do-I-run-specific-tests?" aria-label="Permalink to &quot;Q: How do I run specific tests? {#Q:-How-do-I-run-specific-tests?}&quot;">​</a></h3><p><strong>A:</strong> Use TestItemRunner for targeted testing:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TestItemRunner</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run tests for specific components</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">run_tests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test/censoring/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run tests with specific tags</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">run_tests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ti</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:unit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ti</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tags))</span></span></code></pre></div><h3 id="Q:-How-do-I-add-new-tests?" tabindex="-1">Q: How do I add new tests? <a class="header-anchor" href="#Q:-How-do-I-add-new-tests?" aria-label="Permalink to &quot;Q: How do I add new tests? {#Q:-How-do-I-add-new-tests?}&quot;">​</a></h3><p><strong>A:</strong> Create tests using the <code>@testitem</code> macro:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@testitem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;My new feature&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tags</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:unit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">begin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CensoredDistributions, Distributions</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Test your feature</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> my_new_function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    @test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">isa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SomeType</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><h2 id="Documentation" tabindex="-1">Documentation <a class="header-anchor" href="#Documentation" aria-label="Permalink to &quot;Documentation {#Documentation}&quot;">​</a></h2><h3 id="Q:-How-do-I-build-the-documentation-locally?" tabindex="-1">Q: How do I build the documentation locally? <a class="header-anchor" href="#Q:-How-do-I-build-the-documentation-locally?" aria-label="Permalink to &quot;Q: How do I build the documentation locally? {#Q:-How-do-I-build-the-documentation-locally?}&quot;">​</a></h3><p><strong>A:</strong> Use the documentation environment:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Full build (includes Pluto notebook processing - slow)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">julia</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project=docs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs/make.jl</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Fast build for development (skips notebook processing)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">julia</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project=docs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs/make.jl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --skip-notebooks</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Alternative: use environment variable</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SKIP_NOTEBOOKS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">true</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> julia</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project=docs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs/make.jl</span></span></code></pre></div><p>The <code>--skip-notebooks</code> option is useful during development for quick documentation checks without waiting for slow Pluto notebook processing.</p><h3 id="Q:-How-do-I-add-a-new-Pluto-notebook-tutorial?" tabindex="-1">Q: How do I add a new Pluto notebook tutorial? <a class="header-anchor" href="#Q:-How-do-I-add-a-new-Pluto-notebook-tutorial?" aria-label="Permalink to &quot;Q: How do I add a new Pluto notebook tutorial? {#Q:-How-do-I-add-a-new-Pluto-notebook-tutorial?}&quot;">​</a></h3><p><strong>A:</strong></p><ol><li><p>Create the <code>.jl</code> notebook in <code>docs/src/getting-started/tutorials/</code></p></li><li><p>Add a <code>build(&quot;getting-started/tutorials&quot;)</code> call in <code>docs/make.jl</code> if not already present</p></li><li><p>Add the generated <code>.md</code> file path to <code>docs/pages.jl</code></p></li></ol><h3 id="Q:-How-do-I-update-docstrings?" tabindex="-1">Q: How do I update docstrings? <a class="header-anchor" href="#Q:-How-do-I-update-docstrings?" aria-label="Permalink to &quot;Q: How do I update docstrings? {#Q:-How-do-I-update-docstrings?}&quot;">​</a></h3><p><strong>A:</strong> We use DocStringExtensions.jl for automatic documentation generation. The approach depends on content:</p><p>For docstrings with DocStringExtensions macros only:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@doc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(TYPEDSIGNATURES)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Compute the square of \`x\`.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># See also</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">- [\`sqrt\`](@ref): Inverse operation</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> my_function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>For docstrings with both macros and LaTeX math:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@doc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(TYPEDSIGNATURES)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Compute the function \`\`f(x) = x^2\`\`.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># Mathematical formulation</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">The function computes: \`\`f(x) = x^2\`\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> my_function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p><strong>Important:</strong> Never use <code>@doc raw&quot;</code> with DocStringExtensions macros as it prevents macro expansion.</p><h2 id="Code-Quality" tabindex="-1">Code Quality <a class="header-anchor" href="#Code-Quality" aria-label="Permalink to &quot;Code Quality {#Code-Quality}&quot;">​</a></h2><h3 id="Q:-How-do-I-run-code-quality-checks?" tabindex="-1">Q: How do I run code quality checks? <a class="header-anchor" href="#Q:-How-do-I-run-code-quality-checks?" aria-label="Permalink to &quot;Q: How do I run code quality checks? {#Q:-How-do-I-run-code-quality-checks?}&quot;">​</a></h3><p><strong>A:</strong> Quality tests are included in the main test suite:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">julia</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project=.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;using Pkg; Pkg.test()&#39;</span></span></code></pre></div><p>Individual quality tests can be found in <code>test/package/</code>.</p><h3 id="Q:-My-code-doesn&#39;t-pass-formatting-checks" tabindex="-1">Q: My code doesn&#39;t pass formatting checks <a class="header-anchor" href="#Q:-My-code-doesn&#39;t-pass-formatting-checks" aria-label="Permalink to &quot;Q: My code doesn&amp;#39;t pass formatting checks {#Q:-My-code-doesn&#39;t-pass-formatting-checks}&quot;">​</a></h3><p><strong>A:</strong> The project uses automatic formatting. Check the pre-commit hooks or run formatting tools as specified in the contributing guide.</p><h3 id="Q:-How-do-I-check-for-type-stability?" tabindex="-1">Q: How do I check for type stability? <a class="header-anchor" href="#Q:-How-do-I-check-for-type-stability?" aria-label="Permalink to &quot;Q: How do I check for type stability? {#Q:-How-do-I-check-for-type-stability?}&quot;">​</a></h3><p><strong>A:</strong> Use JET.jl for static analysis:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JET</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check specific function</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@report_opt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> primary_censored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Gamma</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Uniform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check entire package</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@report_package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CensoredDistributions</span></span></code></pre></div><h2 id="Performance" tabindex="-1">Performance <a class="header-anchor" href="#Performance" aria-label="Permalink to &quot;Performance {#Performance}&quot;">​</a></h2><h3 id="Q:-How-do-I-benchmark-my-changes?" tabindex="-1">Q: How do I benchmark my changes? <a class="header-anchor" href="#Q:-How-do-I-benchmark-my-changes?" aria-label="Permalink to &quot;Q: How do I benchmark my changes? {#Q:-How-do-I-benchmark-my-changes?}&quot;">​</a></h3><p><strong>A:</strong> Use BenchmarkTools.jl:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BenchmarkTools</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> primary_censored</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Gamma</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Uniform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@benchmark</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cdf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pc, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>For comprehensive benchmarking:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">julia</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --project=benchmark</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> benchmark/runbenchmarks.jl</span></span></code></pre></div><h3 id="Q:-How-do-I-add-analytical-solutions-for-new-distribution-pairs?" tabindex="-1">Q: How do I add analytical solutions for new distribution pairs? <a class="header-anchor" href="#Q:-How-do-I-add-analytical-solutions-for-new-distribution-pairs?" aria-label="Permalink to &quot;Q: How do I add analytical solutions for new distribution pairs? {#Q:-How-do-I-add-analytical-solutions-for-new-distribution-pairs?}&quot;">​</a></h3><p><strong>A:</strong> See the Analytical CDF Solutions tutorial in the <a href="/CensoredDistributions.jl/previews/PR137/getting-started/index#tutorials">tutorials</a> section for implementation patterns. Add methods to the appropriate files in <code>src/censoring/</code> and ensure they&#39;re properly tested.</p><h2 id="Contributing" tabindex="-1">Contributing <a class="header-anchor" href="#Contributing" aria-label="Permalink to &quot;Contributing {#Contributing}&quot;">​</a></h2><h3 id="Q:-How-can-I-contribute-to-the-package?" tabindex="-1">Q: How can I contribute to the package? <a class="header-anchor" href="#Q:-How-can-I-contribute-to-the-package?" aria-label="Permalink to &quot;Q: How can I contribute to the package? {#Q:-How-can-I-contribute-to-the-package?}&quot;">​</a></h3><p><strong>A:</strong> See our <a href="/CensoredDistributions.jl/previews/PR137/developer/contributing#contributing">Contributing Guide</a> for details on setting up the development environment, running tests, code style guidelines, and submitting pull requests.</p><h3 id="Q:-I-found-a-bug-or-have-a-feature-request" tabindex="-1">Q: I found a bug or have a feature request <a class="header-anchor" href="#Q:-I-found-a-bug-or-have-a-feature-request" aria-label="Permalink to &quot;Q: I found a bug or have a feature request {#Q:-I-found-a-bug-or-have-a-feature-request}&quot;">​</a></h3><p><strong>A:</strong></p><ul><li><p><strong>Bugs</strong>: File a GitHub issue with a minimal reproducible example</p></li><li><p><strong>Feature requests</strong>: Open a GitHub issue with rationale and use case</p></li><li><p><strong>Questions</strong>: Use GitHub Discussions for broader questions</p></li></ul><h3 id="Q:-How-do-I-submit-a-pull-request?" tabindex="-1">Q: How do I submit a pull request? <a class="header-anchor" href="#Q:-How-do-I-submit-a-pull-request?" aria-label="Permalink to &quot;Q: How do I submit a pull request? {#Q:-How-do-I-submit-a-pull-request?}&quot;">​</a></h3><p><strong>A:</strong></p><ol><li><p>Fork the repository</p></li><li><p>Create a feature branch</p></li><li><p>Make your changes with tests</p></li><li><p>Run the full test suite: <code>julia --project=. -e &#39;using Pkg; Pkg.test()&#39;</code></p></li><li><p>Build documentation: <code>julia --project=docs docs/make.jl</code></p></li><li><p>Submit a pull request with a clear description</p></li></ol><h3 id="Q:-What-should-I-include-in-my-pull-request?" tabindex="-1">Q: What should I include in my pull request? <a class="header-anchor" href="#Q:-What-should-I-include-in-my-pull-request?" aria-label="Permalink to &quot;Q: What should I include in my pull request? {#Q:-What-should-I-include-in-my-pull-request?}&quot;">​</a></h3><p><strong>A:</strong></p><ul><li><p>Clear description of changes and motivation</p></li><li><p>Tests for new functionality</p></li><li><p>Documentation updates if needed</p></li><li><p>Ensure all CI checks pass</p></li></ul><h2 id="Troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#Troubleshooting" aria-label="Permalink to &quot;Troubleshooting {#Troubleshooting}&quot;">​</a></h2><h3 id="Q:-The-documentation-build-is-failing" tabindex="-1">Q: The documentation build is failing <a class="header-anchor" href="#Q:-The-documentation-build-is-failing" aria-label="Permalink to &quot;Q: The documentation build is failing {#Q:-The-documentation-build-is-failing}&quot;">​</a></h3><p><strong>A:</strong> Common issues:</p><ul><li><p>Check that all cross-references are valid</p></li><li><p>Ensure Pluto notebooks run without errors</p></li><li><p>Verify all <code>@example</code> blocks execute successfully</p></li><li><p>Check for missing dependencies in <code>docs/Project.toml</code></p></li></ul><h3 id="Q:-Pluto-notebooks-won&#39;t-start" tabindex="-1">Q: Pluto notebooks won&#39;t start <a class="header-anchor" href="#Q:-Pluto-notebooks-won&#39;t-start" aria-label="Permalink to &quot;Q: Pluto notebooks won&amp;#39;t start {#Q:-Pluto-notebooks-won&#39;t-start}&quot;">​</a></h3><p><strong>A:</strong></p><ul><li><p>Ensure you&#39;re using the docs environment: <code>julia --project=docs</code></p></li><li><p>Check that Pluto is installed: <code>] add Pluto</code></p></li><li><p>Try the shell script: <code>docs/pluto-scripts.sh</code></p></li></ul><h3 id="Q:-I&#39;m-getting-precompilation-errors" tabindex="-1">Q: I&#39;m getting precompilation errors <a class="header-anchor" href="#Q:-I&#39;m-getting-precompilation-errors" aria-label="Permalink to &quot;Q: I&amp;#39;m getting precompilation errors {#Q:-I&#39;m-getting-precompilation-errors}&quot;">​</a></h3><p><strong>A:</strong></p><ul><li><p>Clear compiled cache: <code>julia -e &#39;using Pkg; Pkg.precompile()&#39;</code></p></li><li><p>Reset environments: remove <code>Manifest.toml</code> and run <code>] instantiate</code></p></li><li><p>Check for version conflicts: <code>] resolve</code></p></li></ul><h2 id="Getting-Help" tabindex="-1">Getting Help <a class="header-anchor" href="#Getting-Help" aria-label="Permalink to &quot;Getting Help {#Getting-Help}&quot;">​</a></h2><p>For development-specific questions:</p><ul><li><p><strong>Code issues</strong>: Open a <a href="https://github.com/EpiAware/CensoredDistributions.jl/discussions" target="_blank" rel="noreferrer">GitHub Discussion</a></p></li><li><p><strong>Bug reports</strong>: <a href="https://github.com/EpiAware/CensoredDistributions.jl/issues" target="_blank" rel="noreferrer">GitHub Issues</a></p></li><li><p><strong>General Julia development</strong>: <a href="https://discourse.julialang.org/" target="_blank" rel="noreferrer">Julia Discourse</a></p></li></ul>`,79)])])}const u=i(n,[["render",l]]);export{c as __pageData,u as default};
