import{_ as i,c as o,o as r,aA as t}from"./chunks/framework.BeM8k1A1.js";const m=JSON.parse('{"title":"Release notes","description":"","frontmatter":{},"headers":[],"relativePath":"release-notes.md","filePath":"release-notes.md","lastUpdated":null}'),a={name:"release-notes.md"};function n(s,e,l,d,c,p){return r(),o("div",null,[...e[0]||(e[0]=[t('<h1 id="Release-notes" tabindex="-1">Release notes <a class="header-anchor" href="#Release-notes" aria-label="Permalink to &quot;Release notes {#Release-notes}&quot;">​</a></h1><p>CensoredDistributions.jl follows a hybrid changelog approach:</p><ul><li><p><strong>GitHub Releases</strong>: All releases (automatically generated by TagBot)</p></li><li><p><strong>NEWS.md</strong>: Major releases requiring detailed context (shown below)</p></li></ul><p>See <a href="https://github.com/EpiAware/CensoredDistributions.jl/releases" target="_blank" rel="noreferrer">GitHub Releases</a> for minor/patch release information.</p><h2 id="v0.1.0-Initial-Release" tabindex="-1">v0.1.0 - Initial Release <a class="header-anchor" href="#v0.1.0-Initial-Release" aria-label="Permalink to &quot;v0.1.0 - Initial Release {#v0.1.0-Initial-Release}&quot;">​</a></h2><p>CensoredDistributions.jl extends Distributions.jl to support primary event censoring and interval censoring, enabling modelling of scenarios where observation times are subject to various forms of censoring and truncation.</p><h3 id="Core-Functionality" tabindex="-1">Core Functionality <a class="header-anchor" href="#Core-Functionality" aria-label="Permalink to &quot;Core Functionality {#Core-Functionality}&quot;">​</a></h3><p><strong>Distribution Constructors</strong></p><ul><li><p><code>primary_censored(dist, primary_event)</code>: Creates primary event censored distributions where an initiating event occurs within a time window, then experiences a delay</p></li><li><p><code>interval_censored(dist, interval)</code>: Creates interval censored distributions for continuous values observed only within discrete intervals (regular or arbitrary intervals)</p></li><li><p><code>double_interval_censored(dist; kwargs...)</code>: Combines primary event censoring, optional truncation, and optional secondary interval censoring in an appropriate mathematical sequence</p></li></ul><p><strong>Distribution Types</strong></p><ul><li><p><code>PrimaryCensored{D, P}</code>: Wraps delay distribution <code>D</code> with primary event distribution <code>P</code></p></li><li><p><code>IntervalCensored{D, T}</code>: Wraps continuous distribution <code>D</code> with interval boundaries of type <code>T</code></p></li><li><p><code>DoubleIntervalCensored</code>: Composition of multiple censoring mechanisms</p></li></ul><p><strong>Extensible CDF Method</strong></p><ul><li><code>primarycensored_cdf()</code>: User-extensible method for computing CDFs of primary censored distributions with analytical solutions for common distribution pairs</li></ul><p><strong>Utility Functions</strong></p><ul><li><code>weight(dist, weights)</code>: Creates weighted distributions for efficient likelihood computation</li></ul><h3 id="Distributions.jl-Interface" tabindex="-1">Distributions.jl Interface <a class="header-anchor" href="#Distributions.jl-Interface" aria-label="Permalink to &quot;Distributions.jl Interface {#Distributions.jl-Interface}&quot;">​</a></h3><p>Partial implementation of Distributions.jl interface including:</p><ul><li><p><code>pdf</code>, <code>logpdf</code>: Probability density functions</p></li><li><p><code>cdf</code>, <code>logcdf</code>: Cumulative distribution functions</p></li><li><p><code>quantile</code>: Inverse CDF (where analytically tractable)</p></li><li><p><code>rand</code>: Random number generation</p></li><li><p><code>minimum</code>, <code>maximum</code>, <code>insupport</code>: Support queries</p></li><li><p><code>mean</code>, <code>var</code>, <code>std</code>: Moments (where analytically tractable)</p></li></ul><h3 id="Migration-from-primarycensored-R-Package" tabindex="-1">Migration from primarycensored R Package <a class="header-anchor" href="#Migration-from-primarycensored-R-Package" aria-label="Permalink to &quot;Migration from primarycensored R Package {#Migration-from-primarycensored-R-Package}&quot;">​</a></h3><p>CensoredDistributions.jl provides a Julia-native implementation with enhanced functionality compared to the primarycensored R package:</p><p><strong>Function Mapping</strong></p><ul><li><p>R&#39;s <code>dprimarycensored()</code> → Julia&#39;s <code>pdf(primary_censored(...))</code></p></li><li><p>R&#39;s <code>pprimarycensored()</code> → Julia&#39;s <code>cdf(primary_censored(...))</code></p></li><li><p>R&#39;s <code>qprimarycensored()</code> → Julia&#39;s <code>quantile(primary_censored(...))</code></p></li><li><p>R&#39;s <code>rprimarycensored()</code> → Julia&#39;s <code>rand(primary_censored(...))</code></p></li></ul><p><strong>Parameter Differences</strong></p><ul><li><p>Primary event window: Use <code>primary_event = Uniform(0, pwindow)</code> instead of R&#39;s <code>pwindow</code> parameter</p></li><li><p>Solver selection: Configure via <code>solver</code> keyword instead of R&#39;s integration method parameters</p></li><li><p>Truncation: Apply via <code>truncated()</code> from Distributions.jl or use <code>double_interval_censored()</code> convenience function</p></li></ul><h3 id="Contributors" tabindex="-1">Contributors <a class="header-anchor" href="#Contributors" aria-label="Permalink to &quot;Contributors {#Contributors}&quot;">​</a></h3><ul><li><p>Sam Abbott (<a href="https://github.com/seabbs" target="_blank" rel="noreferrer">@seabbs</a>)</p></li><li><p>Damon Bayer (<a href="https://github.com/damonbayer" target="_blank" rel="noreferrer">@damonbayer</a>)</p></li><li><p>Sam Brand (<a href="https://github.com/sambrand" target="_blank" rel="noreferrer">@sambrand</a>)</p></li><li><p>Michael DeWitt (<a href="https://github.com/dewittpe" target="_blank" rel="noreferrer">@dewittpe</a>)</p></li><li><p>Joseph Lemaitre</p></li></ul>',26)])])}const b=i(a,[["render",n]]);export{m as __pageData,b as default};
